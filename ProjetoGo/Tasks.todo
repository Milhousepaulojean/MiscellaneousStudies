Tasks:

    FrontEnd:
        ✔ Planejar FrontEnd que chame API pela rota de Agenda; @done (23/09/2020 00:58:25)
        ✔ Criar um projeto Angular @done (23/09/2020 10:05:01)
            ✔ Criação da estrutura de services; @done (23/09/2020 10:06:34)
            ✔ Construção da Camada de Services conectada ao Componente @done (23/09/2020 10:06:36)
        ✔ Utilizar o BootStrap do https://globocom.github.io/bootstrap/index.html @done (27/09/2020 01:59:24)
        ✔  Desenvolvimento a estrutura estatica @done (27/09/2020 01:59:27)
            ✔  Separar os Componente de navegaçao de data e Restante da pagina; @done (27/09/2020 01:59:28)
            ✔  Criar estrutura estatica por campeonato de data e Campeonato @done (27/09/2020 01:59:29)
        ✔  Criar Funcionalidade de data; @done (27/09/2020 01:59:32)
        ✔  Looping com as informações dos Jogos Jogo -> fase -> edição -> campeonato @done (27/09/2020 01:59:36)
    
    API:
        ✔ Criacao do Projeto Base @done (21/09/2020 22:06:38)
        ✔ Criar estrutura com Camadas de Comunicação; @done (21/09/2020 22:35:23)
        ✔ Ajustar as Camada de Comunicação com API; @done (22/09/2020 22:30:42)
        ✔ Ajustes de Rotas @done (22/09/2020 00:08:30)
        ✔ Criar Rota para Agenda; @done (22/09/2020 00:20:21)
        ✔ Criar aquirvo de configuração; @done (23/09/2020 00:27:57)
        ✔ Estruturar o uso de camadas com imports; @done (23/09/2020 00:27:50)
        ✔ Criar Consumo da API; @done (23/09/2020 00:27:43)
        ✔ Ajustar PATHFILE no server.go @done (25/09/2020 05:20:05)
        ✔ Adicionar URLAGENDA na chamada do rotasAgenda com import do Config com replace para data; @done (25/09/2020 05:20:16)
        ✔ Alterar o nome do Method de ServicesAgenda para ServicesCall; @done (25/09/2020 05:20:38)


    Backlog:
    ☐ Tratar retornos 404 com mensagens amigaveis;
    ☐ Desenvolver teste Unitarios das camadas BE;
 
    
Pontos de Atenção:
        
        * Retira a barra do final
        /esportes/futebol/modalidades/futebol_de_campo/categorias/profissional/data/<DATA>/jogos 
         - Retorna todas as informações e referências dos jogos da data pedida. 
         - Usar o formato YYYY-MM-DD. 
         - Considere que a API só entrega jogos do ano de 2019. 
         - Se não houver jogo na data solicitada, a API retornará 404.

         /equipes/<ID> 
         - Retorna todas as informações e referências da equipe. 
         - Se não existir uma equipe com o id informado, a API retornará 404.

         /esportes/futebol/modalidades/futebol_de_campo/categorias/profissional/campeonato/<ID>
         - Retorna todas as informações e referências do campeonato.
         - Se não existir um campeonato com o id informado, a API retornará 404.

         NÃO DEVE alterar nenhum código dessa API. Sua relação com essa API é apenas de cliente.

         Para subir o serviço basta executar o seguinte comando
            cd esportes-api && yarn && yarn start (ou npm). 
            A API pode ser acessada via 127.0.0.1:8080
            A API retorna sempre uma estrutura de payload que contém resultados e referencias. 
            
            As referências são complementos dos dados de resultado e podem ser muito úteis.
                Todo jogo pertence a uma fase de um campeonato que, por sua vez, pertence a uma edição 
                de campeonato que, finalmente, pertence a um campeonato. 
                É correto considerar o seguinte fluxo de relação/navegação entre jogos e campeonatos
                 Jogo -> fase -> edição -> campeonato. 
                 Ex: Jogo 123 é da Fase Semifinal da Edição Libertadores 2019 do Campeonato Taça Libertadores

            Essa API não foi arquitetada para receber uma alta carga de requests por segundo e a 
                API que você irá construir será chamada diretamente pelo frontend por uma página que 
                recebe em média 1k requests por segundo.

            Sobrecarregar a esportes-api pode resultar na sua queda ocasionando errors 
            para outros clientes desta API o que pode gerar um problema em todo portal do GE.

            As rotas da esportes-api podem apresentar lentidões resultando em tempos de resposta 
            de 2 segundos ou mais.
            
            A API só possui jogos cadastrados para datas do ano de 2019.

Dicas:
    Você pode usar ferramentas e bibliotecas open source, mas documente as decisões e os 
        porquês. Considere que queremos entender a forma como você resolveria o problema, 
        portanto, terceirizar para libs suas regras de negócio pode não ser uma boa ideia;

        Automatize tudo que for possível;
        Se sentir que poderia ter feito algo de uma forma melhor porém o tempo não permitiu, fique a vontade para criar um arquivo .md e compartilhar essas ideias;
        Em caso de dúvidas, pergunte.