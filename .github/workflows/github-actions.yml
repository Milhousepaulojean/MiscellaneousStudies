name: Deploy Testes AWS DocumentDB with Terraform and Node.js

on:
  push:
    branches:
      - repoMongoteste


 jobs:
   terraform:
      steps:
        - name: Print AWS Credentials
          run: |
            echo "AWS Access Key ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
            echo "AWS Secret Access Key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
    #     runs-on: ubuntu-latest

#     env:
#       TF_VAR_aws_region: us-east-1
#       TF_VAR_aws_secret_user: ${{ secrets.TOKEN_USER_AWS_DBDOC }}
#       TF_VAR_aws_secret_pass: ${{ secrets.TOKEN_PASS_AWS_DBDOC }}

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.0.0

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Terraform init
#         run: terraform init

#       - name: Terraform plan
#         run: terraform plan -out=tfplan

#       - name: Terraform apply
#         run: terraform apply tfplan -auto-approve

#   deploy-nodejs:
#     needs: terraform
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: "14"

#       - name: Install dependencies
#         run: npm install

#       - name: Build application
#         run: npm run build

#       - name: Deploy application
#         run: npm run deploy

#       - name: Deploy application
#         run: npm start
